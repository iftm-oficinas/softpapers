package br.com.model.vo;
// Generated 09/05/2015 14:52:35 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pedidocliente generated by hbm2java
 */
@Entity
@Table(name="pedidocliente"
    ,catalog="dbloja"
)
public class Pedidocliente  implements java.io.Serializable {


     private Long idPedidoCliente;
     private Cliente cliente;
     private Formapagamento formapagamento;
     private Item item;
     private Usuario usuario;
     private Date dataCriacao;
     private Date dataAtualizacao;
     private Set<Pedidoparceladocliente> pedidoparceladoclientes = new HashSet<Pedidoparceladocliente>(0);

    public Pedidocliente() {
    }

	
    public Pedidocliente(Formapagamento formapagamento, Item item, Usuario usuario) {
        this.formapagamento = formapagamento;
        this.item = item;
        this.usuario = usuario;
    }
    public Pedidocliente(Cliente cliente, Formapagamento formapagamento, Item item, Usuario usuario, Date dataCriacao, Date dataAtualizacao, Set<Pedidoparceladocliente> pedidoparceladoclientes) {
       this.cliente = cliente;
       this.formapagamento = formapagamento;
       this.item = item;
       this.usuario = usuario;
       this.dataCriacao = dataCriacao;
       this.dataAtualizacao = dataAtualizacao;
       this.pedidoparceladoclientes = pedidoparceladoclientes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idPedidoCliente", unique=true, nullable=false)
    public Long getIdPedidoCliente() {
        return this.idPedidoCliente;
    }
    
    public void setIdPedidoCliente(Long idPedidoCliente) {
        this.idPedidoCliente = idPedidoCliente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="clientePedidoCliente")
    public Cliente getCliente() {
        return this.cliente;
    }
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="formaPagamento", nullable=false)
    public Formapagamento getFormapagamento() {
        return this.formapagamento;
    }
    
    public void setFormapagamento(Formapagamento formapagamento) {
        this.formapagamento = formapagamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="itemPedidoCliente", nullable=false)
    public Item getItem() {
        return this.item;
    }
    
    public void setItem(Item item) {
        this.item = item;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="usuarioPedidoCliente", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataCriacao", length=19)
    public Date getDataCriacao() {
        return this.dataCriacao;
    }
    
    public void setDataCriacao(Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataAtualizacao", length=19)
    public Date getDataAtualizacao() {
        return this.dataAtualizacao;
    }
    
    public void setDataAtualizacao(Date dataAtualizacao) {
        this.dataAtualizacao = dataAtualizacao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pedidocliente")
    public Set<Pedidoparceladocliente> getPedidoparceladoclientes() {
        return this.pedidoparceladoclientes;
    }
    
    public void setPedidoparceladoclientes(Set<Pedidoparceladocliente> pedidoparceladoclientes) {
        this.pedidoparceladoclientes = pedidoparceladoclientes;
    }




}


