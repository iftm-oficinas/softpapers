package br.com.models.vo;
// Generated 09/05/2015 14:52:35 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="dbloja"
    , uniqueConstraints = @UniqueConstraint(columnNames="emailUsuario") 
)
public class Usuario  implements java.io.Serializable {


     private Long idUsuario;
     private String nomeUsuario;
     private String cpfUsuario;
     private String emailUsuario;
     private String senhaUsuario;
     private String enderecoUsuario;
     private Date dataCriacao;
     private Date dataAtualizacao;
     private Set<Pedidofornecedor> pedidofornecedors = new HashSet<Pedidofornecedor>(0);
     private Set<Pedidocliente> pedidoclientes = new HashSet<Pedidocliente>(0);

    public Usuario() {
    }

	
    public Usuario(String nomeUsuario, String cpfUsuario) {
        this.nomeUsuario = nomeUsuario;
        this.cpfUsuario = cpfUsuario;
    }
    public Usuario(String nomeUsuario, String cpfUsuario, String emailUsuario, String senhaUsuario, String enderecoUsuario, Date dataCriacao, Date dataAtualizacao, Set<Pedidofornecedor> pedidofornecedors, Set<Pedidocliente> pedidoclientes) {
       this.nomeUsuario = nomeUsuario;
       this.cpfUsuario = cpfUsuario;
       this.emailUsuario = emailUsuario;
       this.senhaUsuario = senhaUsuario;
       this.enderecoUsuario = enderecoUsuario;
       this.dataCriacao = dataCriacao;
       this.dataAtualizacao = dataAtualizacao;
       this.pedidofornecedors = pedidofornecedors;
       this.pedidoclientes = pedidoclientes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idUsuario", unique=true, nullable=false)
    public Long getIdUsuario() {
        return this.idUsuario;
    }
    
    public void setIdUsuario(Long idUsuario) {
        this.idUsuario = idUsuario;
    }

    
    @Column(name="nomeUsuario", nullable=false, length=30)
    public String getNomeUsuario() {
        return this.nomeUsuario;
    }
    
    public void setNomeUsuario(String nomeUsuario) {
        this.nomeUsuario = nomeUsuario;
    }

    
    @Column(name="cpfUsuario", nullable=false, length=15)
    public String getCpfUsuario() {
        return this.cpfUsuario;
    }
    
    public void setCpfUsuario(String cpfUsuario) {
        this.cpfUsuario = cpfUsuario;
    }

    
    @Column(name="emailUsuario", unique=true, length=20)
    public String getEmailUsuario() {
        return this.emailUsuario;
    }
    
    public void setEmailUsuario(String emailUsuario) {
        this.emailUsuario = emailUsuario;
    }

    
    @Column(name="senhaUsuario", length=20)
    public String getSenhaUsuario() {
        return this.senhaUsuario;
    }
    
    public void setSenhaUsuario(String senhaUsuario) {
        this.senhaUsuario = senhaUsuario;
    }

    
    @Column(name="enderecoUsuario", length=50)
    public String getEnderecoUsuario() {
        return this.enderecoUsuario;
    }
    
    public void setEnderecoUsuario(String enderecoUsuario) {
        this.enderecoUsuario = enderecoUsuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataCriacao", length=19)
    public Date getDataCriacao() {
        return this.dataCriacao;
    }
    
    public void setDataCriacao(Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataAtualizacao", length=19)
    public Date getDataAtualizacao() {
        return this.dataAtualizacao;
    }
    
    public void setDataAtualizacao(Date dataAtualizacao) {
        this.dataAtualizacao = dataAtualizacao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Pedidofornecedor> getPedidofornecedors() {
        return this.pedidofornecedors;
    }
    
    public void setPedidofornecedors(Set<Pedidofornecedor> pedidofornecedors) {
        this.pedidofornecedors = pedidofornecedors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Pedidocliente> getPedidoclientes() {
        return this.pedidoclientes;
    }
    
    public void setPedidoclientes(Set<Pedidocliente> pedidoclientes) {
        this.pedidoclientes = pedidoclientes;
    }




}


