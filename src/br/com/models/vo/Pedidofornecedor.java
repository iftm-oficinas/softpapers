package br.com.models.vo;
// Generated 09/05/2015 14:52:35 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pedidofornecedor generated by hbm2java
 */
@Entity
@Table(name="pedidofornecedor"
    ,catalog="dbloja"
)
public class Pedidofornecedor  implements java.io.Serializable {


     private Long idPedidoFornecedor;
     private Fornecedor fornecedor;
     private Item item;
     private Usuario usuario;
     private Date dataCriacao;
     private Date dataAtualizacao;
     private Set<Pedidoparceladofornecedor> pedidoparceladofornecedors = new HashSet<Pedidoparceladofornecedor>(0);

    public Pedidofornecedor() {
    }

	
    public Pedidofornecedor(Item item, Usuario usuario) {
        this.item = item;
        this.usuario = usuario;
    }
    public Pedidofornecedor(Fornecedor fornecedor, Item item, Usuario usuario, Date dataCriacao, Date dataAtualizacao, Set<Pedidoparceladofornecedor> pedidoparceladofornecedors) {
       this.fornecedor = fornecedor;
       this.item = item;
       this.usuario = usuario;
       this.dataCriacao = dataCriacao;
       this.dataAtualizacao = dataAtualizacao;
       this.pedidoparceladofornecedors = pedidoparceladofornecedors;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idPedidoFornecedor", unique=true, nullable=false)
    public Long getIdPedidoFornecedor() {
        return this.idPedidoFornecedor;
    }
    
    public void setIdPedidoFornecedor(Long idPedidoFornecedor) {
        this.idPedidoFornecedor = idPedidoFornecedor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fornecedorPedidoFornecedor")
    public Fornecedor getFornecedor() {
        return this.fornecedor;
    }
    
    public void setFornecedor(Fornecedor fornecedor) {
        this.fornecedor = fornecedor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="itemPedidoFornecedor", nullable=false)
    public Item getItem() {
        return this.item;
    }
    
    public void setItem(Item item) {
        this.item = item;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="usuarioPedidoFornecedor", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataCriacao", length=19)
    public Date getDataCriacao() {
        return this.dataCriacao;
    }
    
    public void setDataCriacao(Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataAtualizacao", length=19)
    public Date getDataAtualizacao() {
        return this.dataAtualizacao;
    }
    
    public void setDataAtualizacao(Date dataAtualizacao) {
        this.dataAtualizacao = dataAtualizacao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pedidofornecedor")
    public Set<Pedidoparceladofornecedor> getPedidoparceladofornecedors() {
        return this.pedidoparceladofornecedors;
    }
    
    public void setPedidoparceladofornecedors(Set<Pedidoparceladofornecedor> pedidoparceladofornecedors) {
        this.pedidoparceladofornecedors = pedidoparceladofornecedors;
    }




}


